name: Smartsheet Tracking and Reporting

on:
  # Daily tracking at midnight UTC
  schedule:
    - cron: '0 0 * * *'        # Daily tracking (midnight UTC)
    - cron: '0 1 * * MON'      # Weekly report (1 AM UTC on Monday)
    - cron: '0 2 1 * *'        # Monthly report (2 AM UTC on 1st of month)
  
  # Manual trigger
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'track'
        type: choice
        options:
          - track
          - weekly-report
          - monthly-report
          - bootstrap
          - reset
          - test-changes

permissions:
  contents: write

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install smartsheet-python-sdk python-dotenv reportlab

      # Determine current hour (UTC) to decide which scheduled task to run
      - name: Determine scheduled task
        if: github.event_name == 'schedule'
        id: determine-task
        run: |
          HOUR=$(date -u +%H)
          DAY=$(date -u +%d)
          WEEKDAY=$(date -u +%u)
          
          if [[ "$HOUR" == "00" ]]; then
            echo "task=track" >> $GITHUB_OUTPUT
          elif [[ "$HOUR" == "01" && "$WEEKDAY" == "1" ]]; then
            echo "task=weekly-report" >> $GITHUB_OUTPUT
          elif [[ "$HOUR" == "02" && "$DAY" == "01" ]]; then
            echo "task=monthly-report" >> $GITHUB_OUTPUT
          fi

      - name: Run track
        if: (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'track') || (github.event_name == 'schedule' && steps.determine-task.outputs.task == 'track')
        env:
          SMARTSHEET_TOKEN: ${{ secrets.SMARTSHEET_TOKEN }}
        run: |
          # --- START DEBUGGING ---
          echo "DEBUG: Running the 'track' task."
          echo "DEBUG: Listing files in the current directory:"
          ls -l
          echo "DEBUG: Attempting to run smartsheet_tracker.py..."
          # --- END DEBUGGING ---
          
          python smartsheet_tracker.py
          
          # --- START DEBUGGING ---
          echo "DEBUG: Python script finished. Exit code: $?"
          echo "DEBUG: Checking for log file:"
          ls -l smartsheet_tracker.log || echo "DEBUG: smartsheet_tracker.log not found."
          # --- END DEBUGGING ---

      - name: Run weekly report
        if: (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'weekly-report') || (github.event_name == 'schedule' && steps.determine-task.outputs.task == 'weekly-report')
        env:
          SMARTSHEET_TOKEN: ${{ secrets.SMARTSHEET_TOKEN }}
        run: |
          python smartsheet_report.py --weekly --previous --force

      - name: Run monthly report
        if: (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'monthly-report') || (github.event_name == 'schedule' && steps.determine-task.outputs.task == 'monthly-report')
        env:
          SMARTSHEET_TOKEN: ${{ secrets.SMARTSHEET_TOKEN }}
        run: |
          python smartsheet_report.py --monthly --previous --force

      - name: Run bootstrap
        if: github.event.inputs.action == 'bootstrap'
        env:
          SMARTSHEET_TOKEN: ${{ secrets.SMARTSHEET_TOKEN }}
        run: |
          python smartsheet_tracker.py --bootstrap

      - name: Reset state
        if: github.event.inputs.action == 'reset'
        env:
          SMARTSHEET_TOKEN: ${{ secrets.SMARTSHEET_TOKEN }}
        run: |
          python smartsheet_tracker.py --reset

      - name: Test changes
        if: github.event.inputs.action == 'test-changes'
        env:
          SMARTSHEET_TOKEN: ${{ secrets.SMARTSHEET_TOKEN }}
        run: |
          python smartsheet_tracker.py --test
          python smartsheet_tracker.py

      - name: Upload log file
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smartsheet-logs
          path: |
            smartsheet_tracker.log
            smartsheet_report.log
          if-no-files-found: warn # Use warn to avoid failing the job

      - name: Commit changes
        run: |
          git config user.name 'GitHub Actions'
          git config user.email 'actions@github.com'
          mkdir -p reports/weekly reports/monthly
          git add tracking_data/ reports/
          COMMIT_MSG="${{ github.event.inputs.action || steps.determine-task.outputs.task || 'Scheduled update' }} $(date +'%Y-%m-%d')"
          git commit -m "$COMMIT_MSG" || echo "No changes to commit"
          git push
