name: Smartsheet Status Snapshot & Report (manuell)

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  snapshot:
    runs-on: ubuntu-latest
    env:
      SMARTSHEET_TOKEN: ${{ secrets.SMARTSHEET_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0   # wichtig, sonst kann reset/rebase fehlschlagen

      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install smartsheet-python-sdk python-dotenv reportlab

      # Optionaler Cleanup: nur einmal laufen lassen, dann auskommentieren
      # - name: Clean old generated files
      #   run: |
      #     git rm -f status/status_report_*.pdf status/status_snapshot_*.csv status/status_summary_*.csv || true
      #     git commit -m "cleanup old outputs" || true
      #     git push || true

      - name: Create 30-day snapshot & summary
        run: python smartsheet_status_snapshot.py

      - name: Generate PDF report
        run: python smartsheet_status_report.py

      - name: Upload artifacts (debug / Kontrolle)
        uses: actions/upload-artifact@v3
        with:
          name: status-outputs
          path: |
            status/status_snapshot_*.csv
            status/status_summary_*.csv
            status/status_report_*.pdf

      - name: Commit CSVs and PDF
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"

          # Frischen Stand holen und streng angleichen
          git fetch origin
          git reset --hard origin/main

          DATE=$(date +'%Y-%m-%d')
          SNAP="status/status_snapshot_${DATE}.csv"
          SUMM="status/status_summary_${DATE}.csv"
          PDF="status/status_report_${DATE}.pdf"

          git add -f "$SNAP" "$SUMM" "$PDF"
          git commit -m "Reports ${DATE}" || echo "No changes"
          git push
